<style>
  .multi__container {
    display: grid;
    grid-template-columns: repeat(3,1fr);
    justify-items: start;
    column-gap: 20px;
  }
  .m_checkout-notice h4 {
    /* font-style: italic; */
    color: #000;
    margin: 0;
    font-family: Satoshi;
    font-size: 20px;
    font-weight: 600;
    line-height: 28px;
    @media (max-width: 768px) {
      font-size: 16px;
      line-height: 20px;
    }
  }
  .my-cart-sec div:empty {
    display: block !important;
  }
  .my-cart-sec button {
    border: none;
  }
  .my-cart-sec button:focus-visible {
    border: none;
    outline: none;
  }
  .my-cart-sec {
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 50%);
    z-index: 399;
    visibility: hidden;
  }
  .my-cart.my-cart-sec.active {
    visibility: visible;
  }
  .js-show-ajax-cart .my-cart-sec {
    visibility: visible;
  }
  .mcart-container {
    position: fixed;
    right: -544px;
    top: 10px;
    width: 534px;
    height: calc(100vh - 20px);
    color: rgb(22, 37, 67);
    background: white;
    border-radius: 15px;
    box-sizing: border-box;
    border: 0 solid #e2e8f0;
    overflow: hidden;
    z-index: 400;
    transition: 0.3s ease-in;
    opacity: 0;
    padding-bottom: 15px;
  }
  .my-cart.my-cart-sec.active .mcart-container {
    right: 10px;
    opacity: 1;
  }
  .js-show-ajax-cart .mcart-container {
    right: 10px;
    opacity: 1;
  }
  .mcart-container.loading:after {
    position: absolute;
    content: '';
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    z-index: 5;
    background: rgba(0, 0, 0, 10%);
    cursor: no-drop;
  }

  .mcart-wrapper {
    overflow: auto;
    min-height: 100vh;
    height: 100%;
  }
  .mcart-wrapper::-webkit-scrollbar {
    width: 6px;
    background: var(--Primary, #111827);
    display: none;
  }
  .mcart-header {
    position: sticky;
    top: 0;
    background: white;
    z-index: 5;
    border-bottom: 1px solid #111827;
  }
  .mcart-heading {
    display: flex;
    justify-content: space-between;
    width: 100%;
    border-radius: 9px 0px 0px 0px;
    background: #ff66ff;
    color: white;
    box-sizing: border-box;
    padding: 18px 28px;
  }
  .mcart-heading-p {
    color: #fff;
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: normal;
    text-transform: uppercase;
    margin: 0;
  }
  .mcart-close-btn {
    height: 22px;
    width: 22px;
    background: white;
    border-radius: 11px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
  }
  .mcart-close-btn svg {
    width: 10px;
    height: 10px;
  }
  .mcart-body.my-cart__items {
    display: flex;
    flex-direction: column;
    min-height: 80%;
    justify-content: space-between;
    @media (max-width: 768px) {
      /* min-height: 70%; */
    }
  }
  .mcart-items-wrapper {
    box-sizing: border-box;
    padding-inline: 28px;
  }
  .mcart-bundle-heading {
    grid-column: 1/-1;
    color: var(--Primary, #111827);
    font-size: 22px;
    line-height: normal;
    font-weight: 600;
  }
  .mcart-item {
    display: grid;
    /* grid-template-columns: 100px 1fr; */
    grid-gap: 15px;
    box-sizing: border-box;
    padding: 15px 0px;
    border-bottom: 1px solid #60dbd952;
    position: relative;
  }
  .multi__container .mcart-bundle-complete {
    padding-top: 45%;
  }
  .multi__container .mcart-bundle-complete:not(:last-child) {
    display: none;
  }
  .multi__container .mcart-bundle-price {
    padding-top: 45%;
    font-size: 20px;
    font-weight: 600;
    text-align: center;
    margin-inline: auto;
  }

  .mcart-item-error-msg {
    position: absolute;
    min-height: 35px;
    width: 45%;
    right: 0;
    bottom: 3px;
    background: #ff0000ba;
    border-radius: 6px;
    color: white;
    box-sizing: border-box;
    padding: 2px 6px;
    font-size: 12px;
    opacity: 0;
    z-index: -1;
    transition: 0.2s;
    transform: translateY(5px);
  }
  .mcart-item.error .mcart-item-error-msg {
    opacity: 1;
    z-index: 2;
    transform: translateY(0px);
  }
  .mcart-media {
    display: flex;
    align-items: center;
    position: relative;
  }
  .mcart-media img {
    width: 100%;
    height: auto;
    border-radius: 4px;
    aspect-ratio: 0.9;
    object-fit: cover;
    object-position: bottom;
  }
  .mcart-action {
    display: flex;
    flex-direction: column;
    align-items: flex-end;
    justify-content: space-between;
    gap: 10px;
    /* grid-area: 2/-2; */
    position: absolute;
    top: 10px;
    right: 10px;
  }
  mc-quantity {
    display: grid;
    grid-template-columns: 15px minmax(35px, 1fr) 15px;
    grid-gap: 5px;
    justify-items: center;
    border-radius: 2px;
    border: 0.5px solid #cfcff6;
    box-sizing: border-box;
    height: 24px;
    align-items: center;
  }
  mc-quantity button {
    background: #1118272e;
  }
  .mcart-qty-btn {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    border: none;
  }
  .mcart-qty-btn svg {
    width: 7px;
    height: 7px;
  }
  mc-quantity p {
    margin: 0;
    color: #212121;
    text-align: center;
    font-size: 14px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    opacity: 0.8;
  }
  .mcart-final-price {
    color: #111827;
    /* text-align: right; */
    font-size: 18px;
    font-style: normal;
    /* font-weight: 600; */
    line-height: normal;
    margin: 0;
  }
  .mcart-item-option {
    display: flex;
    align-items: center;
    gap: 5px;
  }
  .mcart-item-option p {
    margin-block: 0px;
  }
  .mcart-item-title {
    color: #212121;
    font-size: 18px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    margin: 0 0 9px 0;
  }
  /* .discount--container{
        list-style-type: none;

      } */
  .mcart-item-title a {
    text-decoration: none;
    color: #111827;
    font-family: Satoshi;
    font-size: 16px;
    line-height: 150%;
    letter-spacing: -0.32px;
  }
  .mcart-item-options {
    margin-bottom: 2px;
    display: none;
  }
  .mcart-item-options: is(strong, p) {
    color: #212121;
    font-size: 16px;
    font-style: normal;
    line-height: normal;
    margin: 0;
  }
  .mcart-subscription p {
    color: #3d3d3d;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
    margin: 0;
  }
  .condition-slide {
    box-sizing: border-box;
    padding-inline: 28px;
    padding-top: 18px;
    padding-bottom: 25px;
  }
  .mcart-items-footer {
    position: sticky;
    bottom: 0;
    background: white;
  }
  .mcart-items-footer {
    box-sizing: border-box;
    padding-inline: 28px;
  }
  .mcart-subtotals {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-block: 10px;
  }
  .mcart-subtotal-title {
    color: var(--Primary, #111827);
    font-size: 22px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    margin: 0;
  }
  .mcart-subtotal-price {
    color: var(--Primary, #111827);
    font-size: 22px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    margin: 0;
    text-align: right;
  }
  .mcart-coupon {
    display: flex;
    align-items: center;
    gap: 5px;
    margin-bottom: 6px;
    margin-top: 18px;
    display: none;
  }
  .mcart-coupon button {
    width: 14.77px;
    height: 14.77px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #111827;
    padding: 0;
    border: none;
  }
  .mcart-coupon svg {
    width: 6.714px;
    height: 6.714px;
    stroke: white;
  }
  .mcart-coupon h5 {
    color: #111827;
    font-size: 18px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    margin-top: 8px;
    opacity: 0.5;
  }
  .mcart-checkout {
    margin-top: 18px;
  }
  #mcart-checkout-form button {
    border-radius: 4px;
    background: var(--Primary, #cc00cc);
    width: 100%;
    height: 42px;
    color: var(--Pure-White, #fff);
    text-align: center;
    font-size: 16px;
    font-style: normal;
    font-weight: 600;
    line-height: 20px;
    /* text-transform: uppercase; */
    cursor: pointer;
    border: none;
  }
  button.proceed_checkout_button:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }
  .mcart-continue-shopping {
    color: var(--Primary, #111827);
    text-align: center;
    font-size: 14px;
    font-style: normal;
    font-weight: 600;
    line-height: 20px;
    text-decoration-line: underline;
    text-transform: uppercase;
    margin-top: 12px;
    display: block;
  }
  .mcart-featured-collection {
    padding-bottom: 20px;
    padding-inline: 28px;
  }
  .mcart-fc-show-details {
    color: var(--Primary, #3d3d3d);
    font-size: 16px;
    font-style: normal;
    font-weight: 500;
    line-height: 20px;
    text-decoration: none;
  }
  .mcart-fc-btn {
    color: #fff;
    font-size: 14px;
    font-style: normal;
    font-weight: 600;
    line-height: 1;
    border-radius: 2px;
    background: var(--Primary, #111827);
    height: 28px;
    width: max-content;
    box-sizing: border-box;
    padding-inline: 16px;
    border-radius: 50px;
  }
  .mcart-fc-price {
    color: var(--Primary, #111827);
    text-align: right;
    font-size: 18px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    margin: 0;
  }
  .mcart-fc-heading {
    background: var(--Primary, #111827);
    height: 42px;
    line-height: 42px;
    border-radius: 4px;
    box-sizing: border-box;
    padding-inline: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-top: 33px;
  }
  .mcart-fc-heading h3 {
    color: #fff;
    font-size: 18px;
    font-style: normal;
    font-weight: 600;
    margin: 0;
  }
  .mcart-empty-wrapper h3 {
    text-align: center;
    margin: 41px 0 40px 0;
    text-transform: uppercase;
    font-size: 22px;
  }
  .mcart-delete-btn {
    border: none;
    background: none;
    cursor: pointer;
  }
  @media (max-width: 768px) {
    .mcart-container {
      right: -100vw;
      width: calc(100vw - 20px);
    }
    .mcart-item-title {
      font-size: 16px;
    }
    .mcart-subscription p {
      font-size: 13px;
    }
    .mcart-final-price {
      font-size: 16px;
    }
    .mcart-subtotal-title {
      font-size: 16px;
    }
    .mcart-subtotal-price {
      font-size: 16px;
    }
    .mcart-fc-show-details {
      font-size: 13px;
    }
    .mcart-fc-price {
      font-size: 16px;
    }
    .mcart-fc-btn {
      font-size: 13px;
    }
    .mcart-fc-heading h3 {
      font-size: 15px;
    }
    #mcart-checkout-form button {
      font-size: 15px;
    }
  }

  /* Asad Start */
  .mcart_footer-product-wrapper {
    /* display: grid;
    grid-template-columns: 1fr 1fr; */
    display: flex;
    gap: 20px;
    flex-direction: row;
    flex-wrap: nowrap;
    overflow: auto;
    border-top: 2px solid #f6f;
    padding-top: 10px;
    padding-bottom: 10px;

    @media (max-width: 768px) {
      /* grid-template-columns: 1fr; */
    }
  }
  .mcart_footer-product {
    display: grid;
    /* grid-template-columns: 50px 1fr 20px; */
    grid-template-columns: repeat(3, 1fr);
    align-items: center;
    gap: 15px;
    min-width: 260px;
    max-width: 300px;
    .mcart-media {
      @media (max-width: 768px) {
        grid-row: 1/3;
      }
    }
    .mcart-info {
      grid-column: 2/-1;
      @media (max-width: 768px) {
        grid-column: 2/3;
        grid-row: 1/3;
      }
    }
    mc-quantity {
      grid-column: 1/3;
      @media (max-width: 768px) {
        grid-column: 3/4;
        grid-row: 2/3;
      }
    }
    mc-itemdelete {
      display: flex;
      justify-content: flex-end;
      @media (max-width: 768px) {
        /* justify-content: center; */
        grid-column: 3/4;
        grid-row: 1/2;
      }
    }
  }
  /* Asad End */

  /* Yeasin Start */
  .discounts__discount > .icon {
    color: rgb(var(--color-foreground));
    width: 1.2rem;
    height: 1.2rem;
    margin-right: 0.7rem;
  }

  /* Yeasin End */
</style>

{% liquid
  assign linePrice = cart.total_price | money_without_currency
  assign item_serial = 0
%}

{% unless template.name == 'cartx' %}
  <mc-drawer data-id="{{ section.id }}" data-item-count="{{ cart.item_count }}">
    <div class="my-cart my-cart-sec">
      <div class="mcart-container">
        <div class="mcart-wrapper">
          <div class="mcart-header">
            <div class="mcart-heading">
              <p class="mcart-heading-p">Your Cart</p>
              <div type="button" class="mcart-close-btn">
                <svg xmlns="http://www.w3.org/2000/svg" width="10" height="10" viewBox="0 0 10 10" fill="none">
                  <path d="M5.58274 5.00014L10.0003 9.42408L9.42408 10.0003L5.00014 5.58274L0.5762 10.0003L0 9.42408L4.41754 5.00014L0 0.5762L0.5762 0L5.00014 4.41754L9.42408 0L10.0003 0.5762L5.58274 5.00014Z" fill="#6f60e9"/>
                </svg>
              </div>
            </div>
            <div class="condition-slide">
              {% render 'mcart-range-slider', cart: cart, free_shipping: section.settings.free_shipping %}
            </div>
          </div>
          <div class="mcart-body my-cart__items">
            <div class="mcart-items-wrapper">
              {% if cart.item_count == 0 %}
                <div class="mcart-empty-wrapper">
                  <h3>Empty Cart</h3>
                </div>
              {% endif %}
              <div class="multi__container">
                {% for item in cart.items %}
                  {% unless item.product.metafields.custom.bundle_exclusion != blank %}
                    {% assign itemIndex = forloop.index %}
                    {% assign range = item.quantity %}
                    {% for i in (1..range) %}
                      {% assign item_serial = item_serial | plus: 1 %}
                      {% comment %}
                        {% assign dynamic_text = i | modulo: 3 %}
                        {% if dynamic_text == 0 %}
                          <p>is divisible by 3</p>
                        {% endif %}
                      {% endcomment %}
                      {% assign item_serial_heading = item_serial | modulo: 2 %}
                      {% if item_serial_heading == 1 %}
                        <div class="mcart-bundle-heading">Bundle</div>
                      {% endif %}
                      <div class="mcart-item">
                        <div class="mcart-item-error-msg">Error orrcoured</div>
                        <div class="mcart-media">
                          {% unless item.image == blank %}
                            {{ item.image | image_url: width: item.image.width | image_tag: loading: 'lazy' }}
                          {% endunless %}
                        </div>
                        <div class="mcart-info">
                          <div class="mcart-item-title">
                            <a href="{{ item.url }}">
                              {{ item.title | escape -}}
                            </a>
                          </div>
                          <div class="mcart-item-options">
                            {% for option in item.options_with_values %}
                              <div class="mcart-item-option {% if option.name == 'Title'  %} hidden {% endif %}">
                                <strong>{{ option.name }}: </strong>
                                <p>{{ option.value }}</p>
                              </div>
                            {% endfor %}
                          </div>
                          <div class="mcart-final-price hidden">
                            {% comment %}
                              {{ item.final_line_price | money }}
                            {% endcomment %}
                            {%- if item.original_price != item.final_price -%}
                              <div class="cart-item__discounted-prices">
                                <span class="visually-hidden">
                                  {{ 'products.product.price.regular_price' | t }}
                                </span>
                                <s class="cart-item__old-price product-option">
                                  {{- item.original_price | money -}}
                                </s>
                                <span class="visually-hidden">
                                  {{ 'products.product.price.sale_price' | t }}
                                </span>
                                <strong class="cart-item__final-price product-option">
                                  {{ item.final_price | money }}
                                </strong>
                              </div>
                            {%- else -%}
                              <div class="product-option">
                                {{ item.original_price | money }}
                              </div>
                            {%- endif -%}
                          </div>
                          <ul
                            class="discounts hidden list-unstyled"
                            role="list"
                            aria-label="{{ 'customer.order.discount' | t }}"
                          >
                            {%- for discount in item.line_level_discount_allocations -%}
                              <li class="discounts__discount">
                                {%- render 'icon-discount' -%}
                                {{ discount.discount_application.title }}
                              </li>
                            {%- endfor -%}
                          </ul>
                          {% if item.selling_plan_allocation %}
                            <div class="mcart-subscription">
                              <p>{{ item.selling_plan_allocation.selling_plan.name }}</p>
                            </div>
                          {% endif %}
                        </div>
                        <div class="mcart-action">
                          <mc-itemdelete
                            data-url="{{ routes.cart_change_url }}.json?line={{ itemIndex }}&quantity={{ item.quantity | minus: 1 }}"
                            {% comment %} data-url="{{ item.url_to_remove | replace: '?','.json?' }}"{% endcomment %}
                          >
                            <button
                              type="button"
                              class="mcart-delete-btn"
                            >
                              <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="17"
                                height="17"
                                viewBox="0 0 17 17"
                                fill="none"
                              >
                                <path d="M4.25 1.7C4.25 1.24913 4.42911 0.81673 4.74792 0.497918C5.06673 0.179107 5.49913 0 5.95 0H11.05C11.5009 0 11.9333 0.179107 12.2521 0.497918C12.5709 0.81673 12.75 1.24913 12.75 1.7V3.4H16.15C16.3754 3.4 16.5916 3.48955 16.751 3.64896C16.9104 3.80837 17 4.02457 17 4.25C17 4.47543 16.9104 4.69163 16.751 4.85104C16.5916 5.01045 16.3754 5.1 16.15 5.1H15.2414L14.5044 15.4207C14.4739 15.8496 14.282 16.251 13.9673 16.544C13.6526 16.8371 13.2386 17 12.8087 17H4.1905C3.76052 17 3.34651 16.8371 3.03185 16.544C2.7172 16.251 2.52528 15.8496 2.49475 15.4207L1.7595 5.1H0.85C0.624566 5.1 0.408365 5.01045 0.248959 4.85104C0.0895533 4.69163 0 4.47543 0 4.25C0 4.02457 0.0895533 3.80837 0.248959 3.64896C0.408365 3.48955 0.624566 3.4 0.85 3.4H4.25V1.7ZM5.95 3.4H11.05V1.7H5.95V3.4ZM3.4629 5.1L4.19135 15.3H12.8095L13.538 5.1H3.4629Z" fill="#111827"/>
                              </svg>
                            </button>
                          </mc-itemdelete>
                        </div>
                      </div>
                      {% if item_serial_heading == 1 %}
                        <div class="mcart-bundle-complete">
                          {{ section.settings.bundle_completion_notice }}
                        </div>
                      {% endif %}
                      {% assign discounted_bundle_price = item_serial | modulo: 4 %}
                      {% if item_serial_heading == 0 %}
                        <div class="mcart-bundle-price">
                          {% if discounted_bundle_price == 0 %}
                            $20.99 <span style="text-decoration: line-through; display: block">$27.98</span>
                          {% else %}
                            $27.98
                          {% endif %}
                        </div>
                      {% endif %}
                    {% endfor %}
                  {% endunless %}
                {% endfor %}
              </div>
            </div>
            <div class="mcart-items-footer">
              <div class="mcart-coupon">
                <button>
                  <svg xmlns="http://www.w3.org/2000/svg" width="11" height="11" viewBox="0 0 11 11" fill="none">
                    <path d="M5.83272 5.83314L5.82968 10.0303H5.28262L5.27958 5.83314L1.08243 5.8301L1.08244 5.28304L5.27958 5.28L5.28262 1.08286H5.82968L5.83272 5.28L10.0299 5.28304L10.0299 5.8301L5.83272 5.83314Z" fill="white"/>
                  </svg>
                </button>
                <h5>Coupon Code</h5>
              </div>
              <!--
                item before proceed to checkout ............................. ..............................................................................
              -->
              <div class="mcart_footer-product-wrapper">
                {% for item in cart.items %}
                  {% assign itemIndex = forloop.index %}
                  {% if item.product.metafields.custom.bundle_exclusion %}
                    <div class="mcart_footer-product">
                      <div class="mcart-media">
                        {% unless item.image == blank %}
                          {{ item.image | image_url: width: item.image.width | image_tag: loading: 'lazy' }}
                        {% endunless %}
                      </div>
                      <div class="mcart-info">
                        <div class="mcart-item-title">
                          <a href="{{ item.url }}">
                            {{ item.title | escape -}}
                          </a>
                        </div>
                        <div class="mcart-final-price">
                          {% comment %}
                            {{ item.final_line_price | money }}
                          {% endcomment %}
                          {%- if item.original_price != item.final_price -%}
                            <div class="cart-item__discounted-prices">
                              <span class="visually-hidden">
                                {{ 'products.product.price.regular_price' | t }}
                              </span>
                              <s class="cart-item__old-price product-option">
                                {{- item.original_price | money -}}
                              </s>
                              <span class="visually-hidden">
                                {{ 'products.product.price.sale_price' | t }}
                              </span>
                              <strong class="cart-item__final-price product-option">
                                {{ item.final_price | money }}
                              </strong>
                            </div>
                          {%- else -%}
                            <div class="product-option">
                              {{ item.original_price | money }}
                            </div>
                          {%- endif -%}
                        </div>
                      </div>
                      <mc-quantity>
                        <button
                          type="button"
                          class="mcart-qty-btn"
                          data-url="{{ routes.cart_change_url }}.json?line={{ itemIndex }}&quantity={{ item.quantity | minus: 1 }}"
                        >
                          <svg xmlns="http://www.w3.org/2000/svg" width="6" height="3" viewBox="0 0 6 3" fill="none">
                            <path opacity="0.5" d="M0.319336 2.27344V0.401367H5.68945V2.27344H0.319336Z" fill="#212121"/>
                          </svg>
                        </button>
                        <p>{{ item.quantity }}</p>
                        <button
                          type="button"
                          class="mcart-qty-btn"
                          data-url="{{ routes.cart_change_url }}.json?line={{ itemIndex }}&quantity={{ item.quantity | plus: 1 }}"
                        >
                          <svg xmlns="http://www.w3.org/2000/svg" width="9" height="9" viewBox="0 0 9 9" fill="none">
                            <path opacity="0.5" d="M8.70996 3.32031V5.20996H5.44043V8.48828H3.55078V5.20996H0.290039V3.32031H3.55078V0.0683594H5.44043V3.32031H8.70996Z" fill="#212121"/>
                          </svg>
                        </button>
                      </mc-quantity>
                      <mc-itemdelete data-url="{{ item.url_to_remove | replace: '?','.json?' }}">
                        <button
                          type="button"
                          class="mcart-delete-btn"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="17"
                            height="17"
                            viewBox="0 0 17 17"
                            fill="none"
                          >
                            <path d="M4.25 1.7C4.25 1.24913 4.42911 0.81673 4.74792 0.497918C5.06673 0.179107 5.49913 0 5.95 0H11.05C11.5009 0 11.9333 0.179107 12.2521 0.497918C12.5709 0.81673 12.75 1.24913 12.75 1.7V3.4H16.15C16.3754 3.4 16.5916 3.48955 16.751 3.64896C16.9104 3.80837 17 4.02457 17 4.25C17 4.47543 16.9104 4.69163 16.751 4.85104C16.5916 5.01045 16.3754 5.1 16.15 5.1H15.2414L14.5044 15.4207C14.4739 15.8496 14.282 16.251 13.9673 16.544C13.6526 16.8371 13.2386 17 12.8087 17H4.1905C3.76052 17 3.34651 16.8371 3.03185 16.544C2.7172 16.251 2.52528 15.8496 2.49475 15.4207L1.7595 5.1H0.85C0.624566 5.1 0.408365 5.01045 0.248959 4.85104C0.0895533 4.69163 0 4.47543 0 4.25C0 4.02457 0.0895533 3.80837 0.248959 3.64896C0.408365 3.48955 0.624566 3.4 0.85 3.4H4.25V1.7ZM5.95 3.4H11.05V1.7H5.95V3.4ZM3.4629 5.1L4.19135 15.3H12.8095L13.538 5.1H3.4629Z" fill="#111827"/>
                          </svg>
                        </button>
                      </mc-itemdelete>
                    </div>
                  {% endif -%}
                {%- endfor %}
              </div>
              <div class="mcart-subtotals">
                <h4 class="mcart-subtotal-title">Subtotal</h4>
                <h4 class="mcart-subtotal-price">{{ cart.total_price | money }}</h4>
              </div>
              <div class="m_checkout-notice">
                <h4>{{ settings.checkout_notice }}</h4>
              </div>
              <div class="mcart-checkout">
                {% assign even_cart_number = item_serial | modulo: 2 %}
                {% form 'cart', cart, id: 'mcart-checkout-form' %}
                  <button
                    class="proceed_checkout_button"
                    type="submit"
                    name="checkout"
                    {% if cart == empty or even_cart_number == 1 %}
                      disabled
                    {% endif %}
                  >
                    Proceed to checkout
                  </button>
                {% endform %}
              </div>
              <a href="/collections/all" class="mcart-continue-shopping">Continue SHopping</a>
            </div>
          </div>
          <div class="mcart-footer"></div>
        </div>
      </div>
    </div>
  </mc-drawer>
{% endunless %}

<script>
  class McDrawer extends HTMLElement {
    constructor() {
      super();
      this.sectionName = this.dataset.id;
    }

    connectedCallback() {
      // this.querySelectorAll(".mcart-prod-add-to-cart").forEach(btn => {
      //   btn.addEventListener("click", this.handleAddOnItem.bind(this))
      // })
    }

    deleteItemEvent(url) {
      this.updateCartItem(url);
    }

    handleAddOnItem(e) {
      this.updateCartItem(e.target.dataset.url);
    }

    updateItemEvent(url, itemWrapper) {
      this.itemWrapper = itemWrapper;
      this.updateCartItem(url);
    }

    handleeQuickAddProduct(url, el) {
      this.quickAddToCartTbn = el;
      el.innerHTML = 'Adding To Cart';
      el.setAttribute('disabled', true);
      this.updateCartItem(url);
    }

    updateCartItem(url) {
      url = `${url}&sections=${this.dataset.id}`;
      fetch(url)
        .then((res) => {
          return res.json();
        })
        .then((res) => {
          if (res.errors) {
            this.handleErrorMessage(res);
            return;
          }
          let html = new DOMParser().parseFromString(res.sections[this.sectionName], 'text/html');
          this.renderElement(html);
        })
        .catch((err) => console.log(err))
        .finally(() => {
          if (this.quickAddToCartTbn) {
            this.quickAddToCartTbn.innerHTML = 'Add To Cart';
            this.quickAddToCartTbn.removeAttribute('disabled');
          }
        });
    }

    fetchSection() {
      let parentThis = this;
      fetch(`${window.location.pathname}?sections=${this.dataset.id}`)
        .then((res) => res.json())
        .then((res) => {
          if (res.errors) {
            return;
          }
          let html = new DOMParser().parseFromString(res[this.sectionName], 'text/html');
          this.renderElement(html);
        })
        .catch((err) => console.log(err));
    }

    handleErrorMessage(res) {
      this.itemWrapper.querySelector('.mcart-item-error-msg').innerHTML = res.errors;
      this.itemWrapper.classList.add('error');
      setTimeout(() => {
        this.itemWrapper.classList.remove('error');
        this.loadingDisabled();
      }, 2000);
    }

    renderElement(html) {
      if (this.querySelector('.mcart-items-wrapper'))
        this.querySelector('.mcart-items-wrapper').innerHTML = html.querySelector('.mcart-items-wrapper').innerHTML;
      if (this.querySelector('.mcart_footer-product-wrapper'))
        this.querySelector('.mcart_footer-product-wrapper').innerHTML = html.querySelector(
          '.mcart_footer-product-wrapper'
        ).innerHTML;
      if (this.querySelector('.condition-slide'))
        this.querySelector('.condition-slide').innerHTML = html.querySelector('.condition-slide').innerHTML;
      if (this.querySelector('.mcart-subtotals'))
        this.querySelector('.mcart-subtotals').innerHTML = html.querySelector('.mcart-subtotals').innerHTML;
      if (this.querySelector('.mcart-checkout'))
        this.querySelector('.mcart-checkout').innerHTML = html.querySelector('.mcart-checkout').innerHTML;
      if (document.querySelector('.cart_item_count'))
        document.querySelector('.cart_item_count').innerHTML = html.querySelector('mc-drawer').dataset.itemCount;

      this.loadingDisabled();
    }

    open() {
      this.fetchSection();
      document.body.style.overflow = 'hidden';
      this.querySelector('.my-cart-sec').classList.add('active');
    }
    close() {
      document.body.style.overflow = 'unset';
      this.querySelector('.my-cart-sec').classList.remove('active');
    }

    loadingEnabled() {
      this.querySelector('.mcart-container').classList.add('loading');
    }
    loadingDisabled() {
      this.querySelector('.mcart-container').classList.remove('loading');
    }

    debounce(fn, wait) {
      let t;
      return (...args) => {
        clearTimeout(t);
        t = setTimeout(() => fn.apply(this, args), wait);
      };
    }
  }

  customElements.define('mc-drawer', McDrawer);

  window.openCartDrawer = () => document.querySelector('mc-drawer').open();
  window.closeCartDrawer = () => document.querySelector('mc-drawer').close();

  class McQuantity extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.btns = this.querySelectorAll('button');
      this.qtyElement = this.querySelector('p');

      this.btns.forEach((btn) => btn.addEventListener('click', this.handleEvent.bind(this)));
    }

    handleEvent(e) {
      let url = '/cart.json',
        wrapper = e.target.closest('.mcart-item');
      if (e.target.tagName === 'BUTTON') url = e.target.dataset.url;
      if (e.currentTarget.tagName === 'BUTTON') url = e.currentTarget.dataset.url;

      let drawer = this.closest('mc-drawer');
      drawer.loadingEnabled();
      drawer.updateItemEvent(url, wrapper);
    }

    debounce(fn, wait) {
      let t;
      return (...args) => {
        clearTimeout(t);
        t = setTimeout(() => fn.apply(this, args), wait);
      };
    }
  }

  customElements.define('mc-quantity', McQuantity);

  class McItemDelete extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.addEventListener('click', this.handleEvent.bind(this));
    }

    handleEvent(e) {
      let drawer = this.closest('mc-drawer');
      drawer.loadingEnabled();
      drawer.deleteItemEvent(this.dataset.url);
    }
  }
  customElements.define('mc-itemdelete', McItemDelete);

  class QuickAddProduct extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.addEventListener('click', this.handleEvent.bind(this));
      this.button = this.querySelector('button');
    }

    handleEvent(e) {
      let drawer = this.closest('mc-drawer');
      drawer.loadingEnabled();
      drawer.handleeQuickAddProduct(this.dataset.url, this.button);
    }
  }
  customElements.define('quickadd-prod', QuickAddProduct);

  window.customFormSubmit = () => {
    document.querySelectorAll('.product-form__submit').forEach((btn) => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        let form = btn.closest('form');
        let formData = new FormData(form);
        fetch(window.Shopify.routes.root + 'cart/add.js', {
          method: 'POST',
          body: formData,
        })
          .then((response) => {
            return response.json();
          })
          .then((response) => {
            openCartDrawer();
          })
          .catch((error) => {
            console.error('Error:', error);
          });
      });
    });
  };

  customFormSubmit();

  if (document.querySelectorAll('.new-header-cart-icon')) {
    document.querySelectorAll('.new-header-cart-icon').forEach((btn) => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        openCartDrawer();
      });
    });
  }
  if (document.querySelector('.mcart-close-btn'))
    document.querySelector('.mcart-close-btn').addEventListener('click', closeCartDrawer);
</script>

{% schema %}
{
  "name": "Cart Drawer",
  "settings": [
    {
      "type": "text",
      "id": "bundle_completion_notice",
      "label": "Bundle Completion Notice"
    },
    {
      "type": "number",
      "id": "free_shipping",
      "label": "Free Shipping Over $n",
      "default": 100
    }
  ]
}
{% endschema %}
